name: Build and Test

on: 
    pull_request:
        branches:
            - main
    push:
        branches:
            - main

jobs:
    lint:
        runs-on: ubuntu-latest
        name: Lint
        steps:
          - name: Checkout Project
            uses: actions/checkout@v4
            with:
              ref: ${{ github.ref }}

          - name: lint
            uses: golangci/golangci-lint-action@v3
            with:
              version: v1.54
        
    build_test:
        runs-on: ubuntu-latest
        name: Checks
        steps:
          - name: Checkout Project
            uses: actions/checkout@v4
            with:
              ref: ${{ github.ref }}
              
          - name: Setup Go
            uses: actions/setup-go@v4
            with:
              go-version: '>=1.20.1'
              cache: false
          - run: go version

          - name: Go Vet
            run: go vet ./...

          - name: Go Mod Init
            run: go mod download
          - name: Go Test
            run: go test -v ./... -race -covermode=atomic -coverprofile=coverage.out

          - name: Upload coverage reports to Codecov
            uses: codecov/codecov-action@v3
            env:
              CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
            with:
              files: coverage.out

    build_container:
        runs-on: ubuntu-latest
        name: Build Container
        permissions:
            contents: read
            packages: write
        steps:
          - name: Checkout Project
            uses: actions/checkout@v4
            with:
              ref: ${{ github.ref }}

          - name: Log in to GitHub Docker Registry
            uses: docker/login-action@v3
            with:
              registry: docker.pkg.github.com
              username: ${{ github.actor }}
              password: ${{ secrets.GITHUB_TOKEN }}

          - name: Build and push Docker image
            uses: docker/build-push-action@v5
            with:
              context: .
              file: Dockerfile
              push: true
              tags: |
                docker.pkg.github.com/${{ github.repository }}/service:${{ github.sha }}

    scan_container:
      runs-on: ubuntu-latest
      name: Scan Container
      needs: [build_container]
      steps:
        - name: Checkout Project
          uses: actions/checkout@v4
          with:
            ref: ${{ github.ref }}
            
    deploy:
        runs-on: ubuntu-latest
        name: Deploy
        needs: [build_container, lint, build_test]
        steps:
          - name: Checkout Project
            uses: actions/checkout@v4
            with:
              ref: ${{ github.ref }}